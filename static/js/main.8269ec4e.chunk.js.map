{"version":3,"sources":["components/FeedbackOptions/FeedbackOptions.module.css","components/Section/Section.module.css","components/Notification/Notification.module.css","components/Statistics/Statistics.js","components/FeedbackOptions/FeedbackOptions.js","components/Section/Section.js","components/Notification/Notification.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","Statistics","good","neutral","bad","total","positivePercentage","FeedbackOptions","options","onFeedback","className","s","map","option","button","type","name","onClick","Section","title","children","section","Notification","value","notification","App","useState","setGood","setBad","setNeutral","countTotalFeedback","Object","keys","e","target","prev","Error","Math","round","countPositiveFeedbackPercentage","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iIACAA,EAAOC,QAAU,CAAC,QAAU,iCAAiC,OAAS,kC,gBCAtED,EAAOC,QAAU,CAAC,MAAQ,yB,iBCA1BD,EAAOC,QAAU,CAAC,aAAe,qC,qHCClB,SAASC,EAAT,GAMX,IAAD,IALCC,YAKD,MALQ,EAKR,MAJCC,eAID,MAJW,EAIX,MAHCC,WAGD,MAHO,EAGP,MAFCC,aAED,MAFS,EAET,MADCC,0BACD,MADsB,EACtB,EACC,OACI,qCACF,uCAAUJ,KACV,sCAASE,KACT,0CAAaD,KACb,wCAAWE,KACX,oDAAuBC,EAAvB,U,oBCZS,SAASC,EAAT,GAAkD,IAAvBC,EAAsB,EAAtBA,QAASC,EAAa,EAAbA,WAC/C,OACI,qBAAKC,UAAaC,IAAEH,QAApB,SACMA,EAAQI,KAAI,SAAAC,GAAM,OAChB,wBACIH,UAAWC,IAAEG,OAEbC,KAAK,SACLC,KAAMH,EACNI,QAASR,EALb,SAOHI,GALYA,Q,oBCNV,SAASK,EAAT,GAAuC,IAApBC,EAAmB,EAAnBA,MAAOC,EAAY,EAAZA,SACvC,OACE,0BAASV,UAAWC,IAAEU,QAAtB,UACGF,GAAS,oBAAIT,UAAWC,IAAEQ,MAAjB,SAAyBA,IAClCC,K,oBCHQ,SAASE,EAAT,GAAkC,IAAVC,EAAS,EAATA,MACrC,OAAO,mBAAGb,UAAWC,IAAEa,aAAhB,SAA+BD,ICEzB,SAASE,IACxB,MAAwBC,mBAAS,GAAjC,mBAAOxB,EAAP,KAAayB,EAAb,KACA,EAAsBD,mBAAS,GAA/B,mBAAOtB,EAAP,KAAYwB,EAAZ,KACA,EAA8BF,mBAAS,GAAvC,mBAAOvB,EAAP,KAAgB0B,EAAhB,KAEMrB,EAAU,CAACN,OAAME,MAAKD,WAEpB2B,EAAqB,WACzB,OAAO5B,EAAOC,EAAUC,GA4BxB,OACE,sBAAKM,UAAU,MAAf,UACE,cAACQ,EAAD,CAASC,MAAM,wBAAf,SACE,cAACZ,EAAD,CACEC,QAASuB,OAAOC,KAAKxB,GACrBC,WAvBS,SAAAwB,GAEjB,OADaA,EAAEC,OAAOlB,MAEpB,IAAK,OACHW,GAAQ,SAAAQ,GAAI,OAAIA,EAAO,KACvB,MACF,IAAK,MACHP,GAAO,SAAAO,GAAI,OAAIA,EAAO,KACtB,MACF,IAAK,UACHN,GAAW,SAAAM,GAAI,OAAIA,EAAO,KAC1B,MACF,QACE,MAAM,IAAIC,MAAM,yBAaU,IAAzBN,IACC,cAACR,EAAD,CAAcC,MAAM,sBAEpB,cAACL,EAAD,CAASC,MAAM,aAAf,SACE,cAAClB,EAAD,CACEC,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOyB,IACPxB,mBA1C4B,WACtC,IAAMD,EAAQyB,IAEd,OAAOO,KAAKC,MAAc,IAAPpC,EAAcG,GAuCHkC,UC5DlC,IAYeC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC1B,EAAD,MAEF2B,SAASC,eAAe,SAG1Bb,M","file":"static/js/main.8269ec4e.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"options\":\"FeedbackOptions_options__2modW\",\"button\":\"FeedbackOptions_button__33Ewb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"Section_title__cXwgF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"notification\":\"Notification_notification__2bDMz\"};","import PropTypes from \"prop-types\";\n\nexport default function Statistics({\n    good = 0,\n    neutral = 0,\n    bad = 0,\n    total = 0,\n    positivePercentage = 0,\n}) {\n    return (\n        <>\n      <p>Good: {good}</p>\n      <p>Bad: {bad}</p>\n      <p>Neutral: {neutral}</p>\n      <p>Total: {total}</p>\n      <p>Positive feadback: {positivePercentage}%</p>\n    </>\n    );\n}\n\nStatistics.propTypes = {\n    good: PropTypes.number,\n    neutral: PropTypes.number,\n    bad: PropTypes.number,\n    total: PropTypes.number,\n    positivePercentage: PropTypes.number\n}","import s from './FeedbackOptions.module.css';\nimport PropTypes from 'prop-types';\n\nexport default function FeedbackOptions ({options, onFeedback}) {\n    return (\n        <div className = {s.options}>\n             {options.map(option =>(\n                <button\n                    className={s.button}\n                    key={option}\n                    type=\"button\"\n                    name={option}\n                    onClick={onFeedback}\n                >\n            {option}\n               </button>\n            ))}\n        </div>\n    )\n};\n\nFeedbackOptions.propTypes = {\n    options: PropTypes.array,\n    onFeedback: PropTypes.func,\n  };","import s from './Section.module.css';\nimport PropTypes from 'prop-types';\n\nexport default function Section({ title, children }) {\n  return (\n    <section className={s.section}>\n      {title && <h2 className={s.title}>{title}</h2>}\n      {children}\n    </section>\n  );\n}\nSection.propTypes = {\n  title: PropTypes.string,\n  children: PropTypes.any,\n};","import PropTypes from 'prop-types';\nimport s from './Notification.module.css';\n\n\nexport default function Notification({ value }) {\n  return <p className={s.notification}>{value}</p>;\n}\n\nNotification.propTypes = {\n  value: PropTypes.string,\n};","import { useState } from 'react';\nimport Statistics from './components/Statistics/Statistics';\nimport FeedbackOptions from './components/FeedbackOptions/FeedbackOptions';\nimport Section from './components/Section/Section';\nimport Notification from './components/Notification/Notification';\n\n\nexport default function App () {\nconst [good, setGood] = useState(0);\nconst [bad, setBad] = useState(0);\nconst [neutral, setNeutral] = useState(0);\n\nconst options = {good, bad, neutral};\n\n  const countTotalFeedback = () => {\n    return good + neutral + bad;\n  };\n\n  const countPositiveFeedbackPercentage = () => {\n    const total = countTotalFeedback();\n\n    return Math.round((good * 100) / total);\n  };\n  \n  \n  const onFeedback = e => {\n    const name = e.target.name;\n    switch (name) {\n      case 'good':\n        setGood(prev => prev + 1);\n        break;\n      case 'bad':\n        setBad(prev => prev + 1);\n        break;\n      case 'neutral':\n        setNeutral(prev => prev + 1);\n        break;\n      default:\n        throw new Error('error: bad type');\n    }\n  };\n\n  \n    return (\n      <div className=\"app\">\n        <Section title=\"Please leave feadback\">\n          <FeedbackOptions\n            options={Object.keys(options)}\n            onFeedback={onFeedback}\n          />\n        </Section>\n        {countTotalFeedback() === 0 ? (\n          <Notification value=\"No feedback given\" />\n        ) : (\n          <Section title=\"Statistics\">\n            <Statistics\n              good={good}\n              neutral={neutral}\n              bad={bad}\n              total={countTotalFeedback()}\n              positivePercentage={countPositiveFeedbackPercentage()}\n            />\n          </Section>\n        )}\n      </div>\n    );\n\n}","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nreportWebVitals();\n"],"sourceRoot":""}